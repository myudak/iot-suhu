[
  {
    "id": "f1c8c4cb0f2c8a4b",
    "type": "tab",
    "label": "Siap Suhu",
    "disabled": false,
    "info": "Flow utama untuk pengumpulan telemetry, penyimpanan ke SQLite, serta dashboard dan API historis."
  },
  {
    "id": "base1",
    "type": "ui_base",
    "theme": {
      "name": "theme-light",
      "lightTheme": {
        "default": "#0094CE",
        "baseColor": "#ffffff",
        "baseFont": "Helvetica Neue",
        "edited": true,
        "reset": "" },
      "darkTheme": {
        "default": "#097479",
        "baseColor": "#111111",
        "baseFont": "Helvetica Neue",
        "edited": false,
        "reset": "" },
      "themeState": {
        "base-color": {
          "default": "#0094CE",
          "value": "#0094CE",
          "name": "default" },
        "page-titlebar-backgroundColor": {
          "value": "#0094CE",
          "name": "default" },
        "page-backgroundColor": {
          "value": "#f3f6f9",
          "name": "custom" },
        "group-backgroundColor": {
          "value": "#ffffff",
          "name": "default" },
        "widget-backgroundColor": {
          "value": "#ffffff",
          "name": "default" },
        "base-font": {
          "value": "Helvetica Neue",
          "name": "Helvetica Neue" }
      }
    },
    "site": {
      "name": "Siap Suhu",
      "hideToolbar": "false",
      "allowSwipe": "false",
      "lockMenu": "false",
      "allowTempTheme": "true",
      "dateFormat": "DD/MM/YYYY",
      "sizes": { "sx": 48, "sy": 48, "gx": 6, "gy": 6, "cx": 6, "cy": 6 }
    }
  },
  {
    "id": "uiTab1",
    "type": "ui_tab",
    "name": "Siap Suhu",
    "icon": "thermostat",
    "order": 1,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "uiGroupRealtime",
    "type": "ui_group",
    "name": "Realtime",
    "tab": "uiTab1",
    "order": 1,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "uiGroupCharts",
    "type": "ui_group",
    "name": "Tren 1 Jam",
    "tab": "uiTab1",
    "order": 2,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "uiGroupInsight",
    "type": "ui_group",
    "name": "Insight",
    "tab": "uiTab1",
    "order": 3,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "mqttBroker1",
    "type": "mqtt-broker",
    "name": "Mosquitto",
    "broker": "mqtt",
    "port": "1883",
    "clientid": "nodered-collector",
    "tls": "",
    "usetls": false,
    "compatmode": false,
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willPayload": "",
    "willMsg": {},
    "sessionExpiry": ""
  },
  {
    "id": "sqliteConfig1",
    "type": "sqlitedb",
    "db": "/data/sqlite/siapsuhu.db",
    "mode": "RWC",
    "name": "SiapSuhu DB",
    "journalmode": "auto"
  },
  {
    "id": "mqttTelemetry",
    "type": "mqtt in",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Telemetry In",
    "topic": "siapsuhu/telemetry/#",
    "qos": "1",
    "datatype": "auto",
    "broker": "mqttBroker1",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 130,
    "y": 120,
    "wires": [["jsonTelemetry"]]
  },
  {
    "id": "jsonTelemetry",
    "type": "json",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Parse Telemetry JSON",
    "property": "payload",
    "action": "obj",
    "pretty": false,
    "x": 330,
    "y": 120,
    "wires": [["fnTelemetry"]]
  },
  {
    "id": "fnTelemetry",
    "type": "function",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Validasi & Fan Out",
    "func": "const data = msg.payload || {}\nconst deviceId = String(data.device_id || '').trim()\nif (!deviceId) {\n    node.warn('device_id kosong, abaikan pesan')\n    return null\n}\nconst temp = Number(data.temp_c)\nconst humidity = Number(data.humidity)\nconst rssi = Number(data.rssi)\nif (!Number.isFinite(temp) || !Number.isFinite(humidity)) {\n    node.warn('Nilai suhu/kelembapan tidak valid, abaikan pesan')\n    return null\n}\nconst timestamp = data.ts || new Date().toISOString()\nconst insertMsg = {\n    topic: 'INSERT INTO readings(device_id, ts, temp_c, humidity, rssi) VALUES (?,?,?,?,?)',\n    payload: [\n        deviceId,\n        timestamp,\n        temp,\n        humidity,\n        Number.isFinite(rssi) ? Math.round(rssi) : null\n    ]\n}\nconst gaugeMsg = {\n    payload: temp,\n    topic: deviceId,\n    device: deviceId,\n    ts: timestamp,\n    humidity,\n    rssi: Number.isFinite(rssi) ? Math.round(rssi) : null\n}\nconst tempChartMsg = {\n    payload: temp,\n    topic: deviceId,\n    ts: timestamp\n}\nconst humidityChartMsg = {\n    payload: humidity,\n    topic: deviceId,\n    ts: timestamp\n}\nconst history = flow.get('history') || []\nhistory.unshift({ device_id: deviceId, ts: timestamp, temp_c: temp, humidity, rssi: Number.isFinite(rssi) ? Math.round(rssi) : null })\nif (history.length > 50) {\n    history.pop()\n}\nflow.set('history', history)\nconst tableMsg = { payload: history }\nreturn [insertMsg, gaugeMsg, tempChartMsg, humidityChartMsg, tableMsg]\n",
    "outputs": 5,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 560,
    "y": 120,
    "wires": [["sqliteInsert"], ["gaugeTemp"], ["chartTemp"], ["chartHumidity"], ["tableHistory"]]
  },
  {
    "id": "sqliteInsert",
    "type": "sqlite",
    "z": "f1c8c4cb0f2c8a4b",
    "mydb": "sqliteConfig1",
    "name": "Simpan ke SQLite",
    "sqlquery": "msg.topic",
    "sql": "",
    "x": 800,
    "y": 60,
    "wires": [[]]
  },
  {
    "id": "gaugeTemp",
    "type": "ui_gauge",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Suhu Terkini",
    "group": "uiGroupRealtime",
    "order": 1,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "{{msg.topic}}",
    "label": "¬∞C",
    "format": "{{value | number:1}}",
    "min": "0",
    "max": "60",
    "colors": ["#00b500", "#e6e600", "#ca3838"],
    "seg1": "30",
    "seg2": "35",
    "x": 820,
    "y": 120,
    "wires": []
  },
  {
    "id": "chartTemp",
    "type": "ui_chart",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Grafik Suhu",
    "group": "uiGroupCharts",
    "order": 1,
    "width": 0,
    "height": 0,
    "label": "Suhu (¬∞C)",
    "chartType": "line",
    "legend": "true",
    "xformat": "HH:mm:ss",
    "interpolate": "linear",
    "nodata": "Belum ada data",
    "dot": false,
    "ymin": "0",
    "ymax": "60",
    "removeOlder": "1",
    "removeOlderPoints": "",
    "removeOlderUnit": "3600",
    "cutout": 0,
    "useOneColor": false,
    "colors": ["#ff5722", "#03a9f4", "#9c27b0"],
    "useOldStyle": false,
    "outputs": 1,
    "x": 820,
    "y": 200,
    "wires": [[]]
  },
  {
    "id": "chartHumidity",
    "type": "ui_chart",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Grafik Kelembapan",
    "group": "uiGroupCharts",
    "order": 2,
    "width": 0,
    "height": 0,
    "label": "Kelembapan (%)",
    "chartType": "line",
    "legend": "true",
    "xformat": "HH:mm:ss",
    "interpolate": "linear",
    "nodata": "Belum ada data",
    "dot": false,
    "ymin": "0",
    "ymax": "100",
    "removeOlder": "1",
    "removeOlderPoints": "",
    "removeOlderUnit": "3600",
    "cutout": 0,
    "useOneColor": false,
    "colors": ["#2196f3", "#009688", "#4caf50"],
    "useOldStyle": false,
    "outputs": 1,
    "x": 830,
    "y": 260,
    "wires": [[]]
  },
  {
    "id": "tableHistory",
    "type": "ui_table",
    "z": "f1c8c4cb0f2c8a4b",
    "group": "uiGroupRealtime",
    "name": "Sampel Historis",
    "order": 2,
    "width": "12",
    "height": "8",
    "columns": [
      { "field": "device_id", "title": "Device", "width": "", "align": "left", "formatter": "plaintext" },
      { "field": "ts", "title": "Timestamp", "width": "", "align": "left", "formatter": "plaintext" },
      { "field": "temp_c", "title": "Temp (¬∞C)", "width": "", "align": "right", "formatter": "plaintext" },
      { "field": "humidity", "title": "Humidity (%)", "width": "", "align": "right", "formatter": "plaintext" },
      { "field": "rssi", "title": "RSSI", "width": "", "align": "right", "formatter": "plaintext" }
    ],
    "outputs": 0,
    "cts": false,
    "x": 840,
    "y": 320,
    "wires": []
  },
  {
    "id": "mqttInsight",
    "type": "mqtt in",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Insight In",
    "topic": "siapsuhu/insight/#",
    "qos": "1",
    "datatype": "auto",
    "broker": "mqttBroker1",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 130,
    "y": 420,
    "wires": [["jsonInsight"]]
  },
  {
    "id": "jsonInsight",
    "type": "json",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Parse Insight JSON",
    "property": "payload",
    "action": "obj",
    "pretty": false,
    "x": 330,
    "y": 420,
    "wires": [["fnInsight"]]
  },
  {
    "id": "fnInsight",
    "type": "function",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Format Insight",
    "func": "const data = msg.payload || {}\nconst deviceId = String(data.device_id || '').trim()\nif (!deviceId) {\n    return null\n}\nconst level = (data.level || 'OK').toUpperCase()\nconst summary = data.summary || ''\nconst recommendation = data.recommendation || ''\nconst ts = data.ts || new Date().toISOString()\nconst entry = {\n    device_id: deviceId,\n    level,\n    summary,\n    recommendation,\n    ts,\n    last_temp_c: data.last_temp_c,\n    window_avg_c: data.window_avg_c\n}\nconst items = flow.get('insights') || []\nitems.unshift(entry)\nif (items.length > 10) {\n    items.pop()\n}\nflow.set('insights', items)\nconst emoji = level === 'ALERT' ? 'üö®' : (level === 'WARN' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è')\nconst listMsg = { payload: items }\nconst textMsg = {\n    payload: `${level} ‚Ä¢ ${deviceId}: ${summary}`,\n    topic: deviceId,\n    level,\n    recommendation\n}\nconst toastMsg = {\n    payload: `${emoji} ${deviceId} (${level})\n${summary}\n${recommendation ? 'Saran: ' + recommendation : ''}`.trim(),\n    topic: 'Siap Suhu',\n    level\n}\nreturn [listMsg, textMsg, toastMsg]\n",
    "outputs": 3,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 560,
    "y": 420,
    "wires": [["insightTemplate"], ["insightText"], ["insightToast"]]
  },
  {
    "id": "insightTemplate",
    "type": "ui_template",
    "z": "f1c8c4cb0f2c8a4b",
    "group": "uiGroupInsight",
    "name": "Daftar Insight",
    "order": 1,
    "width": "12",
    "height": "6",
    "format": "<div class=\"insight-list\">\n  <div ng-repeat=\"item in msg.payload\" class=\"insight-item\" style=\"padding:8px;border-bottom:1px solid #eee;\">\n    <strong>{{item.level}}</strong> ‚Ä¢ {{item.device_id}} ‚Ä¢ {{item.ts}}<br/>\n    {{item.summary}}<span ng-if=\"item.recommendation\"> ‚Äî <em>{{item.recommendation}}</em></span>\n  </div>\n  <div ng-if=\"!msg.payload || !msg.payload.length\">Belum ada insight.</div>\n</div>",
    "storeOutMessages": false,
    "fwdInMessages": true,
    "resendOnRefresh": true,
    "templateScope": "local",
    "x": 820,
    "y": 420,
    "wires": []
  },
  {
    "id": "insightText",
    "type": "ui_text",
    "z": "f1c8c4cb0f2c8a4b",
    "group": "uiGroupInsight",
    "order": 2,
    "width": "12",
    "height": "1",
    "name": "Ringkasan Insight",
    "label": "{{msg.topic}}",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "x": 830,
    "y": 480,
    "wires": []
  },
  {
    "id": "insightToast",
    "type": "ui_toast",
    "z": "f1c8c4cb0f2c8a4b",
    "position": "top right",
    "displayTime": "5",
    "highlight": "{{msg.level !== 'OK'}}",
    "outputs": 0,
    "ok": "OK",
    "cancel": "Cancel",
    "topic": "",
    "name": "Notifikasi Insight",
    "x": 830,
    "y": 540,
    "wires": []
  },
  {
    "id": "httpInHistory",
    "type": "http in",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "GET /api/history",
    "url": "/api/history",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 140,
    "y": 620,
    "wires": [["fnHistoryQuery"]]
  },
  {
    "id": "fnHistoryQuery",
    "type": "function",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Bangun Query",
    "func": "const query = msg.req.query || {}\nconst params = []\nlet sql = 'SELECT device_id, ts, temp_c, humidity, rssi FROM readings WHERE 1=1'\nif (query.device_id) {\n    sql += ' AND device_id = ?'\n    params.push(String(query.device_id))\n}\nif (query.from) {\n    sql += ' AND ts >= ?'\n    params.push(String(query.from))\n}\nif (query.to) {\n    sql += ' AND ts <= ?'\n    params.push(String(query.to))\n}\nconst limit = Math.min(Number(query.limit) || 200, 500)\nsql += ' ORDER BY ts DESC LIMIT ?'\nparams.push(limit)\nmsg.topic = sql\nmsg.payload = params\nreturn msg\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 360,
    "y": 620,
    "wires": [["sqliteHistory"]]
  },
  {
    "id": "sqliteHistory",
    "type": "sqlite",
    "z": "f1c8c4cb0f2c8a4b",
    "mydb": "sqliteConfig1",
    "name": "Query History",
    "sqlquery": "msg.topic",
    "sql": "",
    "x": 580,
    "y": 620,
    "wires": [["historyResponse"]]
  },
  {
    "id": "historyResponse",
    "type": "function",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "Response JSON",
    "func": "msg.headers = { 'Content-Type': 'application/json' }\nmsg.payload = JSON.stringify(msg.payload || [])\nreturn msg\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 800,
    "y": 620,
    "wires": [["httpResponse"]]
  },
  {
    "id": "httpResponse",
    "type": "http response",
    "z": "f1c8c4cb0f2c8a4b",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 1020,
    "y": 620,
    "wires": []
  }
]
